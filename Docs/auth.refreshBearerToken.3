.TH auth.refreshBearerToken 3 "29 Jan 2021" "pyopenTIDAL 1.0.1" "pyopenTIDAL Manual"
.SH NAME
auth.refreshBearerToken \- Request a new access-token from the refresh-token
.SH SYNOPSIS
.B import openTIDAL

.nf
.BI "class auth (" object "):"
.BI "    def refreshBearerToken (" self ", " session ", " refreshToken ", " threadHandle ")"
.fi
.SH DESCRIPTION
Exchange a refresh token for an access token when the access token has expired.

The server does not issue a new refresh token in the response.
This service function should not be called by the application since it is integrated in the http-connector.

This call \fBmust\fP have a corresponding call to \fIauth.cleanup(3)\fP
when the operation is complete.
.nf
.B Thread Handle
.fi
You must never share the same handle in multiple threads. You can pass the handles around among threads, but you must never use a single handle from more than one thread at any given time.

Call \fIhttp.default(3)\fP to get the session main handle.
.SH RETURN VALUE
If no memory allocation error occurred in allocating the content container, a
pointer will be returned.
Otherwise, an exception is thrown.
.SH "SEE ALSO"
.BR auth.cleanup "(3), " auth.getDeviceCode "(3), " auth.logout "(3), "
.BR auth.getBearerToken "(3), " session.login "(3), " session.getHandle "(3) "
