.TH favorites.addItem 3 "29 Jan 2021" "pyopenTIDAL 1.0.1" "pyopenTIDAL Manual"
.SH NAME
favorites.addItem \- Manipulate favorites 
.SH SYNOPSIS
.B import openTIDAL

.nf
.BI "class favorites (" object "):"
.BI "    def addItem (" self ", " session ", " suffix ", " itemId " , " onArtifactNotFound ", " threadHandle ")"
.fi
.SH DESCRIPTION
The favorites.addItem service function adds an artefact to the user-based favorite section.

.nf
.B Suffixes
.fi
"albums", "tracks", "videos", "artists", "playlists", "mixes"

The ArtifactNotFound parameter alters the behaviour of the TIDAL API, not finding the artefact.
When adding an array of artefacts, one might choose to skip the missing artefact ("SKIP")
instead of giving up ("FAIL").

.nf
.B Thread Handle
.fi
You must never share the same handle in multiple threads. You can pass the handles around among threads, but you must never use a single handle from more than one thread at any given time.

Call \fIhttp.default(3)\fP to get the session main handle.
.SH RETURN VALUE
See \fIenums.status(7)\fP.
.SH "SEE ALSO"
.BR favorites.get "(3), " favorites.deleteItem "(3), " favorites.addItems "(3), "
.BR stream.getVideoStream "(3), " base.getPage "(3), " base.getStandard "(3) "
