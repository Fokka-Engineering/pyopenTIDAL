.TH playlist.addItem 3 "29 Jan 2021" "pyopenTIDAL 1.0.1" "pyopenTIDAL Manual"
.SH NAME
playlist.addItem \- Add an artefact to a playlist
.SH SYNOPSIS
.B import openTIDAL

.nf
.BI "class playlist (" object "):"
.BI "    def addItem (" self ", " session ", " contentId ", " itemId ", " onArtifactNotFound ", " onDupes ", " threadHandle ")"
.fi
.SH DESCRIPTION
The OTServiceAddPlaylistItem service function adds an artefact to a playlist.

The ArtifactNotFound parameter alters the behaviour of the TIDAL API, not finding the artefact.
When adding an array of artefacts, one might choose to skip the missing artefact ("SKIP")
instead of giving up ("FAIL").

The onDupes parameter alters the behaviour of the TIDAL API if the artefact occurs multiple times.
Three enums are available: "ADD", "SKIP", "FAIL".

.nf
.B Thread Handle
.fi
You must never share the same handle in multiple threads. You can pass the handles around among threads, but you must never use a single handle from more than one thread at any given time.

Call \fIhttp(3)\fP to get the session main handle.
.SH RETURN VALUE
\fIenums.status(7)\fP
.SH "SEE ALSO" 
.BR json.getObject "(3), " playlist.deleteItem "(3), " playlist.moveItem "(3), "
.BR playlist.addItem "(3), " playlist.addItems "(3), " session.login "(3) "
